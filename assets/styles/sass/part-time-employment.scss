@import 'partials/variables';

h3 {
  font-size: $header-font-size;
}
.card.banner p {
  font-family: $body-font-family;
}
.point-of-contact {
  height: 100%;
}
.quick-guide .card {
  margin: 0;
}
.advice h3, .content--guide .padded {
  text-align: center;
}
@media (max-width: $small-screen-width) {
  .content--guide .padded {
    padding-bottom: 0;
  }
}
ol li {
  list-style: decimal;
}
.buttons .flex-half {
  flex-basis: 100%;
  max-width: 100%;
}
@media (min-width: $small-screen-width) {
  .buttons .flex-half {
    flex-basis: 50%;
    max-width: 50%;
  }
}
// how-to-hire guide (on-campus only) 
.content--guide {
  overflow: visible;
}
.guide {
  display: flex;
  justify-content: space-around;
  flex-wrap: wrap;

  width: 100%;
  
  counter-reset: step;
}
@media (min-width: $small-screen-width) {
  .guide {
    padding-top: 3rem;
  }
}
.guide-step {
  flex-basis: 100%;
  width: 100%;
  &.attribute {
    flex-basis: 100%;
    width: 100%;
  }
  min-width: 200px;
  
  padding: 5rem;
  
  position: relative;
  counter-increment: step;
  
  & > .icon {
    &::after {
      font-family: $header-font-family;
      content: counter(step);
      padding-left: 1.5rem;
      color: white;
      &:hover {
        color: white; 
      }
    }
  }
  &:first-of-type > .icon::after {
    padding-left: 1.8rem;
  }
  &:nth-of-type(4) > .icon::after {
    padding-left: 1rem; 
  }
  
  & > .details {
    padding-top: 3rem;
    text-align: center;
    font-family: $header-font-family;
    font-size: 2rem;
  }
  
  &::after {    
    @include arrow(down, 30px, white);
  }

  &:nth-of-type(2n) {
    background-color: $bg-gray;
    &::after {
      @include arrow(down, 30px, $bg-gray); 
    }
  }
  &:last-of-type::after {
    content: none;
    border: none;
  }
}
@media (min-width: $moderate-screen-width) {
  .guide-step {
    $steps: 6;
    
    flex-basis: 33.33333%;
    max-width: 33.33333%;
    &.attribute {
      flex-basis: 33.33333%;
      max-width: 33.33333%;
    }
    
    &::after {
      @include arrow(right, 30px, white); 
    }
    &:nth-of-type(2n) {
      background-color: $bg-gray;
      color: inherit;
      &::after {
        @include arrow(right, 30px, $bg-gray); 
      }
    }
    &:nth-of-type(#{$steps / 2})::after {
      @include arrow(down, 30px, white);
    }
    &:nth-of-type(#{$steps})::after {
      @include arrow(left, 30px, $bg-gray); 
    }
    @for $step from ($steps / 2) + 1 through $steps {
      &:nth-of-type(#{$step})::after {
        $color: white;
        @if $step % 2 == 0 {
          $color: $bg-gray; 
        }
        @include arrow(left, 30px, $color);
      }
    }
    $counter: ($steps / 2 + 1);
    @for $step from $steps through ($steps / 2 + 1) {
      &:nth-of-type(#{$step}) {
        order: $counter;
      }
      $counter: $counter + 1;
    }
  }
}
.popover h4 {
  padding-top: $content-separation;
}

// point-of-contact overrides
.point-of-contact {
  h3 {
    padding-top: 0;
  }
  img {
    display: block;
    width: 50%;
    flex-basis: 50%;
    margin: 0 auto;
    margin-bottom: $content-protection;
  }
  .phone, .email,
  .phone a::before, .email a::before {
    font-size: $button-font-size;
  }
}


.faq {
  counter-reset: faq;
}
// accordion overrides
.accordion {
  overflow: hidden;
  margin-bottom: $content-separation;
  box-shadow: $box-shadow;
}
.accordion-header {
  font-family: $body-font-family;
  font-size: $body-font-size;
  text-align: left;
  border: 1px solid $box-shadow-color;
  z-index: 2;
  position: relative;
  padding: $content-separation;
  &::before {
    font-family: $header-font-family;
    content: counter(faq);
    counter-increment: faq;
    padding-right: $content-separation;
  }
  &::after {
    position: absolute;
    right: $content-separation;
  }
}
.accordion > a:not(.collapsed),
.accordion > a.collapsed {
  background: white;
  color: $thisisdarkblue;
}
.accordion > a:hover {
  color: white;
  background: $thisisdarkblue;
}
.accordion-entry,
.accordion-entry:hover {
  color: black;
  background: white;
  border: 1px solid $box-shadow-color;
  border-top: none;
  box-shadow: $box-shadow;
  margin-top: -1rem;
  z-index: 1;
}
@media (min-width: $small-screen-width) {
  .accordion-header {
    padding: $content-separation;
    &::before {
      padding: 0 $content-separation;
    }
    &::after {
      right: $content-separation;
    }
  }
  .accordion-entry {
    padding: $content-separation 7rem;
    padding-bottom: 0;
  }
}